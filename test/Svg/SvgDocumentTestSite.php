<?phpnamespace FrameworkTest\Svg;use Nemundo\Core\Type\Number\Number;use Nemundo\Html\Document\HtmlDocument;use Nemundo\Meteo\AviationWeather\Data\Metar\MetarReader;use Nemundo\Svg\Circle;use Nemundo\Svg\Color;use Nemundo\Svg\Geo\GeoCoordinateXyConverter;use Nemundo\Svg\SvgImage;use Nemundo\Web\Site\AbstractSite;class SvgDocumentTestSite extends AbstractSite{    protected function loadSite()    {        $this->title = 'Svg Test';        $this->url = 'svg-test';        // TODO: Implement loadSite() method.    }    public function loadContent()    {        $html = new HtmlDocument();        $img = new SvgImage($html);        $img->width = 2000;        $img->height = 1000;        $converter = new GeoCoordinateXyConverter();        $converter->width = $img->width;        $converter->height = $img->height;        $reader = new MetarReader();        $reader->model->loadStation();        //$reader->filter->andEqual($reader->model->hasTemperature, true);        $reader->filter->andEqual($reader->model->hasQnh, true);        foreach ($reader->getData() as $stationRow) {            $xyCoordinate = $converter->getXY($stationRow->station->coordinate);            $circle = new Circle($img);            $circle->x = (new Number($xyCoordinate->x))->getRoundedNumber(0);            $circle->y = (new Number($xyCoordinate->y))->getRoundedNumber(0);            $circle->radius = 4;            $circle->rgbColor = new Color\RgbColor();            $circle->rgbColor->r = 100;            $circle->rgbColor->g = 100;            $circle->rgbColor->b = 100 + ((new Number($stationRow->temperature))->getRoundedNumber(0) * 2);            $circle->rgbColor->hsl = ((new Number($stationRow->temperature))->getRoundedNumber(0)) * 3;            //$circle->rgbColor->hsl = ((new Number($stationRow->qnh-980))->roundNumber(0));            //$circle->rgbColor->hsl = 50;        }        $html->render();    }}