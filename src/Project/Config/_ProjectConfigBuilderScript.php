<?phpnamespace Nemundo\Project\Config;use Nemundo\App\Script\Type\AbstractScript;use Nemundo\Core\Config\ConfigFile;use Nemundo\Core\Console\ConsoleInput;use Nemundo\Core\File\File;use Nemundo\Project\Path\ProjectPath;use Nemundo\Project\ProjectConfig;class _oldProjectConfigBuilderScript extends AbstractScript{    private $configFilename;    public function run()    {        $this->configFilename = (new ProjectPath())            ->addPath('config.ini')            ->getFullFilename();        $configFile = new File($this->configFilename);        if ($configFile->fileExists()) {            $this->changeValue( 'mysql_host','MySql Host');            $this->changeValue( 'mysql_port','MySql Port');            $this->changeValue( 'mysql_user','MySql User');            $this->changeValue( 'mysql_password','MySql Password');            $this->changeValue( 'mysql_database','MySql Database');            $config = new ProjectConfigReader();            $config->filename = ProjectConfig::$projectPath . 'config.ini';            $config->readFile();        } else {            $input = new ConsoleInput();            $input->message = 'Filename config.ini';            $input->defaultValue = $filename = getcwd() . DIRECTORY_SEPARATOR . 'config.ini';            $config = new ProjectConfigWriter();            $config->filename = $input->getValue();            $config->writeFile();            $config = new ProjectConfigReader();            $config->filename = ProjectConfig::$projectPath . 'config.ini';            $config->readFile();        }    }    private function changeValue($name, $message)    {        $writer = new ConfigFile($this->configFilename);        $value=$writer->getValue($name);        $input = new ConsoleInput();        $input->message = $message;        $input->defaultValue = $value;        $valueNew = $input->getValue();        if ($value !== $valueNew) {            $writer = new ConfigFile($this->configFilename);            $writer->setValue($name, $valueNew);            $writer->writeFile();        }    }}