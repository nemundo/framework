<?phpnamespace Nemundo\Project\Deployment\Git;use Nemundo\App\Git\Command\GitCloneCommand;use Nemundo\App\Git\Command\GitCommit;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Local\LocalCommand;use Nemundo\Project\Deployment\AbstractDeployment;abstract class AbstractGitDeployment2 extends AbstractBase{    public $deploymentPath;    public $deploymentGitUrl;    public function deploy()    {        //if ($this->getDeploymentPath()->existPath()) {        //(new Debug())->write('Deployment Path already exists.');        // git pull        //} else {        if (!$this->getDeploymentPath()->existPath()) {            //(new Debug())->write('Git Clone: ' . $this->deploymentGitUrl);            $gitClone = new GitCloneCommand();            $gitClone->gitUrl = $this->deploymentGitUrl;            $gitClone->path = $this->getDeploymentPath()->getPath();            $local = new LocalCommand();            $local->addCommand($gitClone->getCmdText());            $local->runCommand();        }        parent::deploy();        $this->onBeforeGitCommitPush();        $commit = new GitCommit();        $commit->path = $this->getDeploymentPath()->getPath();        $output = $commit->runCommand();        /*$push = new GitCommitPush();        $push->path = $this->getDeploymentPath()->getPath();        $output = $push->runCommand();*/        (new Debug())->write($output);        (new Debug())->write('Git Url:');        (new Debug())->write('git clone ' . $this->deploymentGitUrl . ' .');    }    protected function onBeforeGitCommitPush()    {    }}