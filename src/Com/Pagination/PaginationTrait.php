<?phpnamespace Nemundo\Com\Pagination;use Nemundo\Admin\Parameter\PageParameter;use Nemundo\Core\Base\DataSource\AbstractDataSource;use Nemundo\Web\Site\Site;// DataPaginationTraittrait PaginationTrait{    /**     * @var int     */    //public $paginationLimit=30;    /**     * @var int     */    protected $currentPage;    /**     * @var int     */    public $count;    /**     * @var AbstractDataSource|PaginationTrait     */    public $paginationReader;    /**     * @var bool     */    public $showPreviousNext = true;    /**     * @var bool     */    public $showNumber = true;    protected $totalCount;    protected $numberCount = 10;    protected $numberCountHalf = 4;    protected function loadPageRequest()    {        $this->currentPage = (new PageParameter())->getValue();        $this->totalCount = $this->paginationReader->getTotalCount();    }    protected function getLimitStart()    {        $limitStart = $this->currentPage * $this->paginationReader->paginationLimit;        return $limitStart;    }    public function getFrom()    {        $from = ($this->currentPage * $this->paginationReader->paginationLimit) + 1;        return $from;    }    public function getTo()    {        $to = ($this->currentPage + 1) * $this->paginationReader->paginationLimit;        if ($to > $this->getTotalCount()) {            $to = $this->getTotalCount();        }        return $to;    }    public function getPaginationCount()    {        $paginationCount = ceil($this->getTotalCount() / $this->paginationReader->paginationLimit);        $paginationCount--;        return $paginationCount;    }    public function getPaginationFrom()    {        $from = $this->currentPage - $this->numberCountHalf;        if ($from < 1) {            $from = 0;        }        return $from;    }    public function getPaginationTo()    {        $to = $this->currentPage + $this->numberCountHalf;        if ($this->currentPage < $this->numberCountHalf) {            $to = $this->numberCount - 1;        }        if ($to > $this->getPaginationCount()) {            $to = $this->getPaginationCount();        }        return $to;    }    public function getPreviousUrl()    {        $parameter = new PageParameter($this->currentPage - 1);        $url = new Site();        $url->addParameter($parameter);        return $url->getUrl();    }    public function isPreviousActive()    {        $value = true;        if ($this->currentPage == 0) {            $value = false;        }        return $value;    }    public function getNextUrl()    {        $parameter = new PageParameter($this->currentPage + 1);        $url = new \Nemundo\Web\Url\UrlParameterBuilder();        $url->addParameter($parameter);        return $url->getUrl();    }    public function isNextActive()    {        $value = true;        if ($this->currentPage == $this->getPaginationCount()) {            $value = false;        }        return $value;    }    public function getCurrentPage()    {        return (new PageParameter())->getValue();    }    public function getTotalCount()    {        return $this->totalCount;    }}