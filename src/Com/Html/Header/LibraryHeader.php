<?phpnamespace Nemundo\Com\Html\Header;use Nemundo\Html\Container\AbstractHtmlContainer;use Nemundo\Html\Header\AbstractHeaderHtmlContainer;use Nemundo\Html\Header\Link\StylesheetLink;use Nemundo\Html\Header\Style\Style;use Nemundo\Html\Script\JavaScript;use Nemundo\Package\Jquery\Code\JqueryReadyCode;class LibraryHeader extends AbstractHeaderHtmlContainer{    public static $documentTitle;    //public static $documentDescription;    //public static $documentImage;    /**     * @var JqueryReadyCode     */    public static $readyCode;    private static $jsUrlList = [];    //private static $jsPackageUrlList = [];    private static $cssUrlList = [];    private static $jsList = [];    private static $styleList = [];    /**     * @var AbstractHtmlContainer[]     */    private static $headerContainerList = [];    public static function addCssUrl($url)    {        LibraryHeader::$cssUrlList[] = $url;    }    public static function addJsPackageUrl($url)    {        LibraryHeader::$jsPackageUrlList[] = $url;    }    public static function addJsUrl($url)    {        if (!in_array($url, LibraryHeader::$jsUrlList)) {            LibraryHeader::$jsUrlList[] = $url;            /*$js = new JavaScript();            $js->src = $url;            $this->addContainer($js);*/        }        LibraryHeader::$jsUrlList[] = $url;    }    public static function addStyle($style)    {        LibraryHeader::$styleList[] = $style;    }    public static function addJavaScript($code)    {        LibraryHeader::$jsList[] = $code;    }    public static function addHeaderContainer(AbstractHtmlContainer $container)    {        LibraryHeader::$headerContainerList[] = $container;    }    public function getContent()    {        LibraryHeader::$cssUrlList = array_unique(LibraryHeader::$cssUrlList);        foreach (LibraryHeader::$cssUrlList as $filename) {            $css = new StylesheetLink($this);            $css->href = $filename;        }        /*LibraryHeader::$jsPackageUrlList = array_unique(LibraryHeader::$jsPackageUrlList);        foreach (LibraryHeader::$jsPackageUrlList as $filename) {            //foreach ((new LibraryHeader())->getJs ::$jsPackageUrlList as $filename) {            }            $js = new JavaScript($this);            $js->src = $filename;            //$this->addContainerAtFirst($js);        }*/        LibraryHeader::$jsUrlList = array_unique(LibraryHeader::$jsUrlList);        foreach (LibraryHeader::$jsUrlList as $filename) {            $js = new JavaScript($this);            $js->src = $filename;            //$this->addContainer($js);        }        if (count(LibraryHeader::$styleList) > 0) {            $style = new Style($this);            foreach (LibraryHeader::$styleList as $value) {                $style->addStyle($value);            }        }        if (count(LibraryHeader::$jsList) > 0) {            $script = new JavaScript($this);            foreach (LibraryHeader::$jsList as $value) {                $script->addCodeLine($value);            }        }        foreach (LibraryHeader::$headerContainerList as $container) {            $this->addContainer($container);        }        return parent::getContent();    }}