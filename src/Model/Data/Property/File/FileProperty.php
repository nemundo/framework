<?phpnamespace Nemundo\Model\Data\Property\File;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\File\File;use Nemundo\Core\Http\Request\File\AbstractFileRequest;use Nemundo\Core\Http\Request\File\FileRequest;use Nemundo\Core\Http\Url\UrlInformation;class FileProperty extends AbstractBase{    private $filename;    private $url;    private $filenameExtension;    /**     * @var FileRequest     */    private $fileRequest;    public function hasValue()    {        $value = false;        if ($this->hasFilename()) {            $value = true;        }        if ($this->hasUrl()) {            $value = true;        }        if ($this->hasFileRequest()) {            $value = true;        }        return $value;    }    public function hasFilename()    {        $value = false;        if ($this->filename !== null) {            $value = true;        }        return $value;    }    public function getFilename()    {        return $this->filename;    }    public function fromFilename($filename)    {        $this->filename = $filename;        return $this;    }    public function fromUrl($url, $filenameExtension = null)    {        $this->url = $url;        $this->filenameExtension = $filenameExtension;        return $this;    }    public function hasUrl()    {        $value = false;        if ($this->url !== null) {            $value = true;        }        return $value;    }    public function getUrl()    {        return $this->url;    }    public function getFilenameExtension()    {        return $this->filenameExtension;    }    public function fromFileRequest(AbstractFileRequest $fileRequest)    {        $this->fileRequest = $fileRequest;        return $this;    }    public function hasFileRequest()    {        $value = false;        if ($this->fileRequest !== null) {            if ($this->fileRequest->hasValue()) {                $value = true;            }        }        return $value;    }    public function getFileRequest()    {        return $this->fileRequest;    }    public function getOrginalFilename()    {        $filename = null;        if ($this->hasFilename()) {            $filename = (new File($this->getFilename()))->filename;        }        if ($this->hasUrl()) {            $filename = (new UrlInformation($this->getUrl()))->getFilename();        }        if ($this->hasFileRequest()) {            $filename = $this->getFileRequest()->filename;        }        return $filename;    }}