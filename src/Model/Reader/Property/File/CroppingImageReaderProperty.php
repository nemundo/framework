<?phpnamespace Nemundo\Model\Reader\Property\File;use Nemundo\Core\Image\Cropping\CroppingDimension;use Nemundo\Model\Reader\Property\AbstractReaderProperty;use Nemundo\Model\Type\File\CroppingImageType;class CroppingImageReaderProperty extends AbstractReaderProperty{    /**     * @var CroppingImageType     */    public $type;    public function getCroppingDimension()    {        $dimension = new CroppingDimension();        $dimension->width = $this->modelRow->getModelValue($this->type->width);        $dimension->height = $this->modelRow->getModelValue($this->type->heigth);        $dimension->x = $this->modelRow->getModelValue($this->type->x);        $dimension->y = $this->modelRow->getModelValue($this->type->y);        return $dimension;    }    public function getOrginalImageUrl()    {        $property = new FileReaderProperty($this->modelRow, $this->type->orginalImage);        $url = $property->getUrl();        return $url;    }    public function getOrginalFullFilename()    {        $property = new FileReaderProperty($this->modelRow, $this->type->orginalImage);        $url = $property->getFullFilename();        return $url;    }    public function getCroppingFullFilename()    {        $property = new FileReaderProperty($this->modelRow, $this->type->croppingImage);        $url = $property->getFullFilename();        return $url;    }    public function getCroppingImageUrl()    {        $property = new FileReaderProperty($this->modelRow, $this->type->croppingImage);        $url = $property->getUrl();        return $url;    }}