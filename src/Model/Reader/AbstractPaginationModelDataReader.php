<?phpnamespace Nemundo\Model\Reader;use Nemundo\Core\Base\DataSource\PaginationDataSourceTrait;use Nemundo\Core\Type\Number\Number;use Nemundo\Model\Count\ModelDataCount;use Nemundo\Model\ModelConfig;use Nemundo\Model\Row\ModelDataRow;abstract class AbstractPaginationModelDataReader extends AbstractModelDataReader{    use PaginationDataSourceTrait;    //public $currentPage;    /**     * @var int     */    //public $paginationLimit = 30;    /**     * @var int     */    //private $totalCount;    //use PaginationTrait;    public function __construct()    {        parent::__construct();        $this->paginationLimit = ModelConfig::$defaultPaginationLimit;        //$this->loadPageRequest();    }    /**     * @return ModelDataRow[]     */    public function getData()    {        $this->limitStart = ($this->currentPage) * $this->paginationLimit;        $this->limit = $this->paginationLimit;        return parent::getData();    }    public function getTotalCount()    {        if (is_null($this->totalCount)) {            $dataCount = new ModelDataCount();            $dataCount->model = $this->model;            $dataCount->connection = $this->connection;            $dataCount->filter = $this->filter;            $this->totalCount = $dataCount->getCount();        }        return $this->totalCount;    }    public function getFormatTotalCount()    {        $format = (new Number($this->getTotalCount()))->getFormatNumber();        return $format;    }}