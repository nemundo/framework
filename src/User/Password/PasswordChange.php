<?phpnamespace Nemundo\User\Password;use Nemundo\Core\Base\AbstractBaseClass;use Nemundo\User\Builder\AbstractUserBuilder;use Nemundo\User\Data\User\UserUpdate;// ChangePassword// PasswordReset// PasswordUserBuilder// PasswordBuilderclass PasswordChange extends AbstractUserBuilder  // AbstractBaseClass{    /**     * @var string     */    public $login;    /**     * @var string     */    public $password;    /*public function changePassword()    {        $passwordHash = new PasswordHash();        $passwordHash->password = $this->password;        $update = new UserUpdate();        $update->password = $passwordHash->getHashPassword();        $update->filter->andEqual($update->model->login, $this->login);        $update->update();    }*/    public function changePassword($passwordNew)    {        $this->changePasswordByHash((new PasswordHash($passwordNew))->getHashPassword());        return $this;    }    public function changePasswordByHash($passwordHash)    {        $update = new UserUpdate();        $update->password = $passwordHash;        $update->updateById($this->userId);        return $this;    }}