<?phpnamespace Nemundo\App\SystemLog\Com\Container;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Parameter\PageParameter;use Nemundo\App\Application\Com\Container\AbstractApplicationFilterContainer;use Nemundo\App\Application\Com\ListBox\ApplicationListBox;use Nemundo\App\SystemLog\Com\ListBox\LogTypeListBox;use Nemundo\App\SystemLog\Data\Log\LogPaginationReader;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Db\Sql\Order\SortOrder;use Nemundo\Html\Paragraph\Paragraph;class SystemLogContainer extends AbstractApplicationFilterContainer{    /**     * @var bool     */    public $showApplication = true;    /**     * @var bool     */    public $showSendMail = true;    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        $searchForm = new AdminSearchForm($layout);        if ($this->showApplication) {            $applicationListBox = new ApplicationListBox($searchForm);            $applicationListBox->submitOnChange = true;            $applicationListBox->searchMode = true;        }        $logTypeListBox = new LogTypeListBox($searchForm);        $logTypeListBox->submitOnChange = true;        $logTypeListBox->searchMode = true;        $p = new Paragraph($layout);        $table = new AdminTable($layout);        $reader = new LogPaginationReader();        $reader->model->loadApplication();        $reader->model->loadLogType();        $reader->currentPage = (new PageParameter())->getValue();        $reader->paginationLimit = 50;        if ($this->applicationId !== null) {            $reader->filter->andEqual($reader->model->applicationId, $this->applicationId);        }        if ($applicationListBox->hasValue()) {            $reader->filter->andEqual($reader->model->applicationId, $applicationListBox->getValue());        }        if ($logTypeListBox->hasValue()) {            $reader->filter->andEqual($reader->model->logTypeId, $logTypeListBox->getValue());        }        $reader->addOrder($reader->model->id, SortOrder::DESCENDING);        $p->content = $reader->getFormatTotalCount() . ' log item found';        $header = new AdminTableHeader($table);        if ($this->showApplication) {            $header->addText($reader->model->application->label);        }        $header->addText($reader->model->logType->label);        $header->addText($reader->model->message->label);        $header->addText($reader->model->dateTime->label);        if ($this->showSendMail) {            $header->addText($reader->model->sendMail->label);        }        foreach ($reader->getData() as $logRow) {            $row = new TableRow($table);            if ($this->showApplication) {                $row->addText($logRow->application->application);            }            $row->addText($logRow->logType->logType);            $row->addText($logRow->message);            $row->addText($logRow->dateTime->getShortDateTimeLeadingZeroFormat());            if ($this->showSendMail) {                $row->addYesNo($logRow->sendMail);            }        }        $pagination = new AdminPagination($layout);        $pagination->paginationReader = $reader;        return parent::getContent();    }}