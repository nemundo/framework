<?phpnamespace Nemundo\App\SystemLog\Page;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\App\Application\Com\ListBox\ApplicationListBox;use Nemundo\App\SystemLog\Com\ListBox\LogTypeListBox;use Nemundo\App\SystemLog\Data\Log\LogPaginationReader;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Db\Sql\Order\SortOrder;class SystemLogPage extends AbstractTemplateDocument{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        $searchForm = new AdminSearchForm($layout);        $applicationListBox = new ApplicationListBox($searchForm);        $applicationListBox->submitOnChange = true;        $applicationListBox->searchMode = true;        $typeListbox = new LogTypeListBox($searchForm);        $typeListbox->submitOnChange = true;        $typeListbox->searchMode = true;        $table = new AdminTable($layout);        $reader = new LogPaginationReader();        $reader->model->loadApplication();        $reader->model->loadLogType();        $reader->paginationLimit = 50;        $applicationId = $applicationListBox->getValue();        if ($applicationId) {            $reader->filter->andEqual($reader->model->applicationId, $applicationId);        }        $logTypeId = $typeListbox->getValue();        if ($logTypeId) {            $reader->filter->andEqual($reader->model->logTypeId, $logTypeId);        }        $reader->addOrder($reader->model->dateTime, SortOrder::DESCENDING);        $header = new AdminTableHeader($table);        $header->addText($reader->model->application->label);        $header->addText($reader->model->logType->label);        $header->addText($reader->model->message->label);        $header->addText($reader->model->dateTime->label);        $header->addText($reader->model->sendMail->label);        foreach ($reader->getData() as $logRow) {            $row = new TableRow($table);            $row->addText($logRow->application->application);            $row->addText($logRow->logType->logType);            $row->addText($logRow->message);            $row->addText($logRow->dateTime->getShortDateTimeLeadingZeroFormat());            $row->addYesNo($logRow->sendMail);        }        $pagination = new AdminPagination($this);        $pagination->paginationReader = $reader;        return parent::getContent();    }}