<?phpnamespace Nemundo\App\Apache\Script;use Nemundo\App\Apache\Builder\ApacheConfigBuilder;use Nemundo\App\Apache\Reader\ApacheConfigFileReader;use Nemundo\App\Apache\Service\ApacheService;use Nemundo\App\Linux\Cmd\ChmodCmd;use Nemundo\App\Linux\Cmd\ChownCmd;use Nemundo\App\Script\Type\AbstractMenuConsoleScript;use Nemundo\Core\Console\ConsoleInput;use Nemundo\Core\Debug\Debug;use Nemundo\Core\TextFile\Writer\TextFileWriter;use Nemundo\Project\Path\TmpPath;class ApacheScript extends AbstractMenuConsoleScript{    protected function loadScript()    {        $this->scriptName = 'apache';        $this->addMenu('List Config File', function () {            $reader = new ApacheConfigFileReader();            foreach ($reader->getData() as $file) {                (new Debug())->write($file->filename);            }        });        $this->addMenu('Create Config File', function () {            $this->createApacheConfig();            /*            $console = new ConsoleInput();            $console->message = 'Server Name';            $console->defaultValue = 'server_name';            $serverName = $console->getValue();            $console = new ConsoleInput();            $console->message = 'Path';            $console->defaultValue = '/srv/web/server_name';            $path = $console->getValue();            $builder = new ApacheConfigBuilder();            $builder->configPath = '/etc/apache2/sites-enabled';            $builder->serverName = $serverName;            $builder->path = $path;            $builder->createConfigFile();            (new Path($path))->createPath();            //$cmd = new LocalCommand();            $cmd = new ChownCmd();            $cmd->user = 'www-data';            $cmd->path = $path;            $cmd->changeOwner();            (new ApacheService())->restart();*/        });        $this->addMenu('Restart Apache', function () {            (new ApacheService())->restart();        });        $this->addMenu('Install Nextcloud', function () {            $path = $this->createApacheConfig();            /* $console = new ConsoleInput();             $console->message = 'Server Name';             $console->defaultValue = 'server_name';             $serverName = $console->getValue();             $console = new ConsoleInput();             $console->message = 'Path';             $console->defaultValue = '/srv/web/server_name';             $path = $console->getValue();             $builder = new ApacheConfigBuilder();             $builder->configPath = '/etc/apache2/sites-enabled';             $builder->serverName = $serverName;             $builder->path = $path;             $builder->createConfigFile();             (new Path($path))->createPath();             //$cmd = new LocalCommand();             $cmd = new ChownCmd();             $cmd->user = 'www-data';             $cmd->path = $path;             $cmd->changeOwner();*/            $filename = (new TmpPath())                ->addPath('install_nextcloud.sh')                ->getFullFilename();            //https://download.nextcloud.com/server/releases/nextcloud-21.0.2.tar.bz2            $version = '21.0.2';            $txt = new TextFileWriter($filename);            $txt->overwriteExistingFile = true;            $txt->addLine('apt install -y php-gmp php-bcmath php-imagick php-xml php-zip');            $txt->addLine('mkdir /nextcloud_tmp');            $txt->addLine('cd /nextcloud_tmp');            $txt->addLine('wget https://download.nextcloud.com/server/releases/nextcloud-' . $version . '.tar.bz2');            //$txt->addLine('tar -xjvf nextcloud-'.$version.'.tar.bz2');            $txt->addLine('tar -xjf nextcloud-' . $version . '.tar.bz2');            $txt->addLine('unzip nextcloud-' . $version . '.zip');            $txt->addLine('cp -r nextcloud/* ' . $path);            $txt->writeFile();            (new ChmodCmd())->makeExecutable($filename);            (new Debug())->write('Run Script:');            (new Debug())->write('sudo ' . $filename);            /*            $cmd = new LocalCommand();$cmd->showOutput=true;            $cmd->addCommand('apt install php-gmp php-bcmath php-imagick php-xml php-zip');            $cmd->addCommand('mkdir /nextcloud_tmp');            $cmd->addCommand('cd /nextcloud_tmp');            $cmd->addCommand('wget https://download.nextcloud.com/server/releases/nextcloud-x.y.z.tar.bz2.asc');            $cmd->addCommand('tar -xjvf nextcloud-x.y.z.tar.bz2');            $cmd->addCommand('unzip nextcloud-x.y.z.zip');            $cmd->addCommand('cp -r nextcloud '.$path);            $cmd->runCommand();*/        });        $this->addMenu('Install DokuWiki', function () {            $webPath = $this->createApacheConfig();            $filename = (new TmpPath())                ->addPath('dokuwiki.sh')                ->getFullFilename();            $tmpPath = (new TmpPath())                ->addPath('dokuwiki')                ->getPath();            $txt = new TextFileWriter($filename);            $txt->overwriteExistingFile = true;            $txt->addLine('mkdir ' . $tmpPath);            $txt->addLine('wget https://download.dokuwiki.org/src/dokuwiki/dokuwiki-stable.tgz -P ' . $tmpPath);            $txt->addLine('tar xvf ' . $tmpPath . 'dokuwiki-stable.tgz ' . $tmpPath);            $txt->addLine('mv ' . $tmpPath . 'dokuwiki-*/ ' . $webPath);            $txt->writeFile();            (new ChmodCmd())->makeExecutable($filename);            (new Debug())->write('Run Script:');            (new Debug())->write('sudo ' . $filename);        });    }    private function createApacheConfig()    {        $console = new ConsoleInput();        $console->message = 'Server Name';        $console->defaultValue = 'server_name';        $serverName = $console->getValue();        $console = new ConsoleInput();        $console->message = 'Path';        $console->defaultValue = '/srv/web/server_name';        $path = $console->getValue();        $builder = new ApacheConfigBuilder();        $builder->configPath = '/etc/apache2/sites-enabled';        $builder->serverName = $serverName;        $builder->path = $path;        $builder->createConfigFile();        //(new Path($path))->createPath();        //$cmd = new LocalCommand();        $cmd = new ChownCmd();        $cmd->user = 'www-data';        $cmd->path = $path;        $cmd->changeOwner();        //(new ApacheService())->restart();        return $path;    }}