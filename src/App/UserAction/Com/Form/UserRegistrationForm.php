<?phpnamespace Nemundo\App\UserAction\Com\Form;use Nemundo\Admin\Com\Form\AbstractAdminForm;use Nemundo\Admin\Com\ListBox\AdminEmailBox;use Nemundo\Admin\Com\ListBox\AdminPasswordBox;use Nemundo\Admin\Com\ListBox\AdminTextBox;use Nemundo\Core\Validation\ValidationType;use Nemundo\Package\Bootstrap\Form\BootstrapForm;use Nemundo\Package\Bootstrap\FormElement\BootstrapPasswordTextBox;use Nemundo\Package\Bootstrap\FormElement\BootstrapTextBox;use Nemundo\User\Builder\UserBuilder;use Nemundo\User\Login\UserLogin;use Nemundo\User\Password\PasswordChange;use Nemundo\User\Usergroup\AbstractUsergroup;class UserRegistrationForm extends AbstractAdminForm{    /**     * @var AbstractUsergroup[]     */    public $defaultUsergroupList;    /**     * @var BootstrapTextBox     */    private $email;    /**     * @var BootstrapPasswordTextBox     */    private $password;    public function getContent()    {        $this->email = new AdminEmailBox($this);        $this->email->label = 'eMail';        $this->email->validation = true;        $this->email->validationType = ValidationType::IS_EMAIL;        $this->password = new AdminPasswordBox($this);        $this->password->label = 'GewÃ¼nschtes Passwort';        $this->password->validation = true;        return parent::getContent();    }    protected function onSubmit()    {        $email = $this->email->getValue();        $password = $this->password->getValue();        $builder = new UserBuilder();        $builder->login = $email;        $builder->email = $email;        $userId= $builder->createUser();        foreach ($this->defaultUsergroupList as $usergroup) {            $builder->addUsergroup($usergroup);        }        $passwordBuilder= new PasswordChange($userId);        $passwordBuilder->changePassword($password);        $login = new UserLogin();        $login->login = $email;        $login->password = $password;        $login->loginUser();    }}