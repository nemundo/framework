<?phpnamespace Nemundo\App\WebService\ClassDesigner;use Nemundo\App\ClassDesigner\Builder\AbstractClassBuilder;use Nemundo\App\WebService\Service\AbstractServiceRequest;use Nemundo\Dev\Code\PhpClass;use Nemundo\Dev\Code\PhpFunction;use Nemundo\Dev\Code\PhpVisibility;class ServiceRequestClassBuilder extends AbstractClassBuilder{    public function buildClass()    {        $namespace = $this->namespace . '\Service';        $typeClassName = $this->className . 'Service';        $phpClass = new PhpClass();        $phpClass->project = $this->project;        $phpClass->className = $typeClassName;        $phpClass->extendsFromClass = 'AbstractServiceRequest';        $phpClass->namespace = $namespace;        $phpClass->addUseClass(AbstractServiceRequest::class);        $function = new PhpFunction($phpClass);        $function->visibility = PhpVisibility::ProtectedVariable;        $function->functionName = 'loadService()';        $function->add('$this->serviceName=\''.$this->className.'\';');        $function = new PhpFunction($phpClass);        $function->functionName = 'onRequest()';        $phpClass->saveFile();    }}