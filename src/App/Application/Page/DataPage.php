<?phpnamespace Nemundo\App\Application\Page;use Nemundo\Admin\Com\Button\AdminSiteButton;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Layout\Flex\AdminRowFlexLayout;use Nemundo\Admin\Com\ListGroup\AdminListGroup;use Nemundo\App\Application\Com\ListBox\ApplicationListBox;use Nemundo\App\Application\Data\Application\ApplicationReader;use Nemundo\App\Application\Template\ApplicationTemplate;use Nemundo\App\MySql\Com\Table\MySqlDataTable;use Nemundo\App\MySql\Parameter\TableParameter;use Nemundo\App\MySql\Site\Action\DropTableSite;use Nemundo\App\MySql\Site\Action\EmptyTableSite;use Nemundo\Core\Path\PathSize;use Nemundo\Core\Type\Number\Number;use Nemundo\Db\Count\DataCount;use Nemundo\Db\Provider\MySql\Table\MySqlTable;use Nemundo\Html\Heading\H2;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Model\Factory\ModelCollectionFactory;use Nemundo\Model\Path\DataPath;use Nemundo\Web\Url\UrlParameterBuilder;class DataPage extends ApplicationTemplate{    public function getContent()    {        $form = new AdminSearchForm($this);        $applicationListBox = new ApplicationListBox($form);        $applicationListBox->submitOnChange = true;        $applicationListBox->value = $applicationListBox->getValue();        if ($applicationListBox->hasValue()) {            $applicationRow = (new ApplicationReader())->getRowById($applicationListBox->getValue());            $application = $applicationRow->getApplication();            if ($application->modelCollectionClass !== null) {                $layout = new AdminRowFlexLayout($this);                $layoutLeft = new AdminFlexboxLayout($layout);                $layoutRight = new AdminFlexboxLayout($layout);                $listbox = new AdminListGroup($layoutLeft);                $collection = (new ModelCollectionFactory())->getModelCollectionByClassName($application->modelCollectionClass);                foreach ($collection->getModelList() as $model) {                    $url = new UrlParameterBuilder();                    $url->addParameter((new TableParameter($model->tableName)));                    $listbox->addHyperlink($model->tableName, $url->getUrl());                }                $tableParameter = new TableParameter();                if ($tableParameter->exists()) {                    $tableName = $tableParameter->getValue();                    $title = new H2($layoutRight);                    $title->content = $tableName;                    $tablePath = (new DataPath())->addPath($tableName);                    if ($tablePath->existPath()) {                        $p = new Paragraph($layoutRight);                        $p->content = 'Path Size: ' . (new PathSize($tablePath->getPath()))->getFileSize()->getText();                    }                    $table = new MySqlTable($tableName);                    if ($table->existsTable()) {                        $count = new DataCount();                        $count->tableName = $tableName;                        $p = new Paragraph($layoutRight);                        $p->content = (new Number($count->getCount()))->getFormatNumber() . ' Rows';                        $btn = new AdminSiteButton($layoutRight);                        $btn->site = clone(EmptyTableSite::$site);                        $btn->site->addParameter($tableParameter);                        $btn = new AdminSiteButton($layoutRight);                        $btn->site = clone(DropTableSite::$site);                        $btn->site->addParameter($tableParameter);                        $data = new MySqlDataTable($layoutRight);                        $data->tableName = $tableName;                        $data->limit = 50;                    } else {                        $p = new Paragraph($layoutRight);                        $p->content = 'Table does not exist';                    }                }            }        }        return parent::getContent();    }}