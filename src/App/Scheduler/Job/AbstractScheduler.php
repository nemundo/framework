<?phpnamespace Nemundo\App\Scheduler\Job;use Nemundo\App\Scheduler\Builder\NextSchedulerJobBuilder;use Nemundo\App\Scheduler\Data\Scheduler\SchedulerId;use Nemundo\App\Scheduler\Data\Scheduler\SchedulerUpdate;use Nemundo\App\Scheduler\Setup\SchedulerSetup;use Nemundo\App\Script\Type\AbstractScript;use Nemundo\Core\Type\DateTime\Time;abstract class AbstractScheduler extends AbstractScript{    /**     * @var bool     */    public $overrideSetting = true;    /**     * @var bool     */    public $active = false;    /**     * @var int     */    public $minute = 0;    /**     * @var int     */    public $hour = 0;    /**     * @var int     */    public $day = 0;    /**     * @var bool     */    public $specificStartTime = false;    /**     * @var Time     */    public $startTime;    abstract protected function loadScheduler();    public function __construct()    {        parent::__construct();        $this->loadScheduler();    }    protected function loadScript()    {        parent::loadScript();    }    public function getSchedulerId()    {        $id = new SchedulerId();        $id->filter->andEqual($id->model->scriptId, $this->getScriptId());        return $id->getId();    }    public function setActive()    {        /*$id = new ScriptId();        $id->filter->andEqual($id->model->scriptClass, $this->getClassName());        $scriptId = $id->getId();*/        $update = new SchedulerUpdate();        $update->active = true;        $update->filter->andEqual($update->model->scriptId, $this->getScriptId());        $update->update();        $builder = new NextSchedulerJobBuilder();        $builder->schedulerId = $this->getSchedulerId();        $builder->setNow = true;        $builder->buildNextJob();    }    public function setInactive()    {        $update = new SchedulerUpdate();        $update->active = true;        $update->filter->andEqual($update->model->scriptId, $this->getScriptId());        $update->update();        $builder = new NextSchedulerJobBuilder();        $builder->schedulerId = $this->getSchedulerId();        $builder->setNow = true;        $builder->buildNextJob();        /*$this->active = false;        (new SchedulerSetup())->addScheduler($this);*/    }}