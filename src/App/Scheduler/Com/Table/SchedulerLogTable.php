<?phpnamespace Nemundo\App\Scheduler\Com\Table;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\App\Application\Com\Container\AbstractApplicationFilterContainer;use Nemundo\App\Scheduler\Data\SchedulerLog\SchedulerLogPaginationReader;use Nemundo\App\Scheduler\Status\ChanceledSchedulerStatus;use Nemundo\App\Scheduler\Status\FinishedSchedulerStatus;use Nemundo\App\Scheduler\Status\PlannedSchedulerStatus;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Db\Sql\Order\SortOrder;class SchedulerLogTable extends AbstractApplicationFilterContainer{    public function getContent()    {        $table = new AdminTable($this);        $table->caption = 'Scheduler Log';        $header = new AdminTableHeader($table);        $header->addText('Application');        $header->addText('Class Name');        $header->addText('Status');        $header->addText('Planned Date/Time');        $header->addText('Running Date/Time');        $header->addText('Duration');        $logReader = new SchedulerLogPaginationReader();        $logReader->model->loadSchedulerStatus();        $logReader->model->loadScheduler();        $logReader->model->scheduler->loadScript();        $logReader->model->scheduler->script->loadApplication();        $logReader->addOrder($logReader->model->schedulerStatusId);        $logReader->addOrder($logReader->model->runningDateTime, SortOrder::DESCENDING);        $logReader->paginationLimit = 100;        if ($this->applicationId !== '') {            $logReader->filter->andEqual($logReader->model->scheduler->script->applicationId, $this->applicationId);        }        foreach ($logReader->getData() as $logRow) {            $row = new TableRow($table);            $row->addText($logRow->scheduler->script->application->application);            $row->addText($logRow->scheduler->script->scriptClass);            $row->addText($logRow->schedulerStatus->schedulerStatus);            $row->addText($logRow->plannedDateTime->getShortDateTimeLeadingZeroFormat());            if ($logRow->schedulerStatusId != (new PlannedSchedulerStatus())->id && $logRow->schedulerStatusId != (new ChanceledSchedulerStatus())->id) {                $row->addText($logRow->runningDateTime->getShortDateTimeLeadingZeroFormat());            } else {                $row->addEmpty();            }            if ($logRow->schedulerStatusId == (new FinishedSchedulerStatus())->id) {                $row->addText($logRow->duration . ' sec');            } else {                $row->addEmpty();            }        }        $pagination = new AdminPagination($this);        $pagination->paginationReader = $logReader;        return parent::getContent();    }}