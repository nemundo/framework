<?phpnamespace Nemundo\App\Backup\Scheduler;use Nemundo\App\Backup\Data\Backup\BackupReader;use Nemundo\App\Backup\Path\ExportBackupPath;use Nemundo\App\Backup\Path\ZipBackupPath;use Nemundo\App\Scheduler\Job\AbstractScheduler;use Nemundo\Core\Archive\ZipArchive;use Nemundo\Core\File\File;use Nemundo\Core\System\PhpConfig;class BackupExportScheduler extends AbstractScheduler{    protected function loadScheduler()    {        $this->active = false;        $this->overrideSetting = false;        $this->scriptName = 'backup-export';        $this->consoleScript = true;    }    public function run()    {        (new PhpConfig())->setUnlimitedMemoryLimit();        $reader = new BackupReader();        foreach ($reader->getData() as $backupRow) {            $backupRow->getBackup()->export();        }        $zipPath = new ZipBackupPath();        $zipPath->createPath();        $filename = $zipPath            ->addPath('backup.zip')            ->getFullFilename();        $file = new File($filename);        if ($file->fileExists()) {            $file->deleteFile();        }        $zip = new ZipArchive();        $zip->archiveFilename = $filename;        $zip->addPath((new ExportBackupPath())->getPath());        $zip->createArchive();    }}