<?phpnamespace Nemundo\App\Backup\Scheduler;use Nemundo\App\Backup\Data\Backup\BackupReader;use Nemundo\App\Backup\Path\ExportBackupPath;use Nemundo\App\Scheduler\Job\AbstractScheduler;use Nemundo\Core\Archive\ZipArchive;use Nemundo\Core\Debug\Debug;use Nemundo\Core\File\DirectoryReader;use Nemundo\Core\System\PhpConfig;use Nemundo\Project\Path\TmpPath;class BackupExportScheduler extends AbstractScheduler{    protected function loadScheduler()    {        $this->active = false;        $this->overrideSetting = false;        $this->scriptName = 'backup-export';        $this->consoleScript = true;    }    public function run()    {        (new PhpConfig())->setUnlimitedMemoryLimit();        $reader = new BackupReader();        foreach ($reader->getData() as $backupRow) {            $backupRow->getBackup()->export();        }        $filename = (new TmpPath())            ->addPath('backup.zip')            ->getFullFilename();        $zip = new ZipArchive();        $zip->archiveFilename = $filename;        $reader = new DirectoryReader();        $reader->path = (new ExportBackupPath())->getPath();        foreach ($reader->getData() as $file) {            $zip->addFilename($file->getFullFilename());        }        $zip->createArchive();    }}