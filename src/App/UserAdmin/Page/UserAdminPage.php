<?phpnamespace Nemundo\App\UserAdmin\Page;use Nemundo\Admin\Com\Button\AdminIconSiteButton;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Layout\Flex\AdminRowFlexLayout;use Nemundo\Admin\Com\ListBox\AdminSearchTextBox;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\App\UserAdmin\Com\Tab\UserAdminTab;use Nemundo\App\UserAdmin\Site\Export\UserExcelExportSite;use Nemundo\App\UserAdmin\Site\PasswordChangeSite;use Nemundo\App\UserAdmin\Site\UserDeleteSite;use Nemundo\App\UserAdmin\Site\UserEditSite;use Nemundo\App\UserAdmin\Site\UserNewSite;use Nemundo\App\UserAdmin\Template\UserAdminTemplate;use Nemundo\Com\Html\Hyperlink\EmailHyperlink;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Core\Directory\TextDirectory;use Nemundo\User\Data\User\UserPaginationReader;use Nemundo\User\Data\UserUsergroup\UserUsergroupReader;use Nemundo\User\Parameter\UserParameter;class UserAdminPage extends UserAdminTemplate{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        new UserAdminTab($layout);        $formRow = new AdminSearchForm($layout);        $text = new AdminSearchTextBox($formRow);        $text->name = 'q';        $text->value = $text->getValue();        new AdminSearchButton($formRow);        $rowLayout = new AdminRowFlexLayout($layout);        $btn = new AdminIconSiteButton($rowLayout);        $btn->site = UserNewSite::$site;        $btn = new AdminIconSiteButton($rowLayout);        $btn->site = UserExcelExportSite::$site;        $table = new AdminTable($layout);        $header = new TableHeader($table);        $header->addText('Active');        $header->addText('Login');        $header->addText('eMail');        $header->addText('Display Name');        $header->addText('Usergroup');        $header->addEmpty();        $header->addEmpty();        $header->addEmpty();        $userReader = new UserPaginationReader();        $userReader->addOrder($userReader->model->login);        $q = $text->getValue();        if ($q !== '') {            $userReader->filter->orContains($userReader->model->login, $text->getValue());        }        foreach ($userReader->getData() as $userRow) {            $row = new AdminTableRow($table);            $row->addYesNo($userRow->active);            $row->addText($userRow->login);            $email = new EmailHyperlink($row);            $email->email = $userRow->email;            $row->addText($userRow->displayName);            /*$userUsergroupReader = new UserUsergroupReader();            $userUsergroupReader->model->loadUser();            $userUsergroupReader->model->loadUsergroup();            $userUsergroupReader->filter->andEqual($userUsergroupReader->model->userId, $userRow->id);*/            $usergroup = new TextDirectory();            //foreach ($userUsergroupReader->getData() as $userUsergroupRow) {                foreach ($userRow->getUsergroupList() as $usergroupRow) {                $usergroup->addValue($usergroupRow->usergroup);            }            $row->addText($usergroup->getTextWithSeperator());            $userParameter = new UserParameter($userRow->id);            $site = clone(PasswordChangeSite::$site);            $site->addParameter($userParameter);            $row->addIconSite($site);            $site = clone(UserEditSite::$site);            $site->addParameter($userParameter);            $row->addIconSite($site);            $site = clone(UserDeleteSite::$site);            $site->addParameter($userParameter);            $row->addIconSite($site);        }        $pagination = new AdminPagination($layout);        $pagination->paginationReader = $userReader;        return parent::getContent();    }}