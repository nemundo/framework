<?phpnamespace Nemundo\App\UserAdmin\Page\DefaultUser;use Nemundo\Admin\Com\Button\AdminIconSiteButton;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\ListBox\AdminSearchTextBox;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Admin\Com\Title\AdminTitle;use Nemundo\App\UserAdmin\Site\DefaultUser\DefaultUserAdminSite;use Nemundo\App\UserAdmin\Site\DefaultUser\DefaultUserNewSite;use Nemundo\App\UserAdmin\Site\PasswordChangeSite;use Nemundo\App\UserAdmin\Site\UserDeleteSite;use Nemundo\App\UserAdmin\Site\UserEditSite;use Nemundo\App\UserAdmin\Site\UserNewSite;use Nemundo\App\UserAdmin\Template\UserAdminTemplate;use Nemundo\Com\Html\Hyperlink\EmailHyperlink;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Core\Directory\TextDirectory;use Nemundo\User\Data\User\UserPaginationReader;use Nemundo\User\Data\UserUsergroup\UserUsergroupReader;use Nemundo\User\Parameter\UserParameter;class DefaultUserAdminPage extends AbstractTemplateDocument{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        $title = new AdminTitle($layout);        $title->content=DefaultUserAdminSite::$site->title;        $search = new AdminSearchForm($layout);        $text = new AdminSearchTextBox($search);        $text->name = 'q';        $text->value = $text->getValue();        new AdminSearchButton($search);        $btn = new AdminIconSiteButton($layout);        $btn->site = DefaultUserNewSite::$site;        $table = new AdminTable($layout);        $header = new TableHeader($table);        //$header->addText('Active');        $header->addText('Login');        //$header->addText('eMail');        $header->addText('Name/Vorname');        //$header->addText('Usergroup');        $header->addEmpty();        $header->addEmpty();        $header->addEmpty();        $userReader = new UserPaginationReader();        $userReader->addOrder($userReader->model->login);        $q = $text->getValue();        if ($q !== '') {            $userReader->filter->orContains($userReader->model->login, $text->getValue());        }        foreach ($userReader->getData() as $userRow) {            $row = new AdminTableRow($table);            //$row->addYesNo($userRow->active);            //$row->addText($userRow->login);            $email = new EmailHyperlink($row);            $email->email = $userRow->email;            $row->addText($userRow->displayName);            /*$userUsergroupReader = new UserUsergroupReader();            $userUsergroupReader->model->loadUser();            $userUsergroupReader->model->loadUsergroup();            $userUsergroupReader->filter->andEqual($userUsergroupReader->model->userId, $userRow->id);            $usergroup = new TextDirectory();            foreach ($userUsergroupReader->getData() as $userUsergroupRow) {                $usergroup->addValue($userUsergroupRow->usergroup->usergroup);            }            $row->addText($usergroup->getTextWithSeperator());*/            //$userParameter = new UserParameter($userRow->id);            /*$site = clone(PasswordChangeSite::$site);            $site->addParameter($userParameter);            $row->addIconSite($site);*/            /*$site = clone(UserEditSite::$site);            $site->addParameter($userParameter);            $row->addIconSite($site);            $site = clone(UserDeleteSite::$site);            $site->addParameter($userParameter);            $row->addIconSite($site);*/        }        $pagination = new AdminPagination($layout);        $pagination->paginationReader = $userReader;        return parent::getContent();    }}