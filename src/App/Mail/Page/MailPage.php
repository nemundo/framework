<?phpnamespace Nemundo\App\Mail\Page;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Admin\Parameter\PageParameter;use Nemundo\App\Mail\Data\Attachment\AttachmentReader;use Nemundo\App\Mail\Data\InlineImage\InlineImageReader;use Nemundo\App\Mail\Parameter\MailParameter;use Nemundo\App\Mail\Reader\MailQueue\MailQueueDataPaginationReader;use Nemundo\App\Mail\Site\MailDeleteQueueSite;use Nemundo\App\Mail\Site\MailViewSite;use Nemundo\App\Mail\Template\MailTemplate;use Nemundo\Com\Html\Listing\UnorderedList;use Nemundo\Db\Sql\Order\SortOrder;class MailPage extends MailTemplate{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        $mailQueueReader = new MailQueueDataPaginationReader();        $mailQueueReader->currentPage = (new PageParameter())->getValue();        $table = new AdminTable($layout);        (new AdminTableHeader($table))            ->addText($mailQueueReader->model->send->label)            ->addText($mailQueueReader->model->dateTimeSend->label)  //send->label'Send Date/Time')            ->addText($mailQueueReader->model->mailTo->label)  // 'To')            ->addText($mailQueueReader->model->subject->label)  // 'Subject')            ->addText('Inline Image')            ->addText('Attachment')            ->addText($mailQueueReader->model->dateTimeCreated->label)  // 'Date/Time')            ->addText($mailQueueReader->model->mailServer->mailAddress->label)            ->addEmpty()            ->addEmpty();        $mailQueueReader->addOrder($mailQueueReader->model->id, SortOrder::DESCENDING);        foreach ($mailQueueReader->getData() as $mailQueueRow) {            $row = new AdminTableRow($table);            $row->addYesNo($mailQueueRow->send);            if ($mailQueueRow->send) {                $row->addText($mailQueueRow->dateTimeSend->getShortDateTimeLeadingZeroFormat());            } else {                $row->addEmpty();            }            $row->addText($mailQueueRow->mailTo);            $row->addText($mailQueueRow->subject);            $ul = new UnorderedList($row);            $inlineImageReader = new InlineImageReader();            $inlineImageReader->filter->andEqual($inlineImageReader->model->mailQueueId, $mailQueueRow->id);            foreach ($inlineImageReader->getData() as $inlineImageRow) {                $ul->addText($inlineImageRow->cid . ' ' . $inlineImageRow->filename);            }            $ul = new UnorderedList($row);            $attachmentReader = new AttachmentReader();            $attachmentReader->filter->andEqual($attachmentReader->model->mailQueueId, $mailQueueRow->id);            foreach ($attachmentReader->getData() as $attachmentRow) {                $customFilename = '';                if ($attachmentRow->hasCustomFilename) {                    $customFilename = ' (' . $attachmentRow->customFilename . ')';                }                $ul->addText($attachmentRow->filename . $customFilename);            }            $row->addText($mailQueueRow->dateTimeCreated->getShortDateTimeLeadingZeroFormat());            $row->addText($mailQueueRow->mailServer->mailText . ' (' . $mailQueueRow->mailServer->mailAddress . ')');            $site = clone(MailViewSite::$site);            $site->addParameter((new MailParameter($mailQueueRow->id)));            $row->addIconSite($site);            $site = clone(MailDeleteQueueSite::$site);            $site->addParameter((new MailParameter($mailQueueRow->id)));            $row->addIconSite($site);        }        $pagination = new AdminPagination($layout);        $pagination->paginationReader = $mailQueueReader;        return parent::getContent();    }}