<?phpnamespace Nemundo\App\Mail\Page;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\App\Mail\Com\Form\MailServerForm;use Nemundo\App\Mail\Data\MailServer\MailServerReader;use Nemundo\App\Mail\Parameter\MailServerParameter;use Nemundo\App\Mail\Site\ConfigSite;use Nemundo\App\Mail\Site\MailServerDeleteSite;use Nemundo\App\Mail\Template\MailTemplate;use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;class ConfigPage extends MailTemplate{    public function getContent()    {        $layout = new BootstrapTwoColumnLayout($this);        $table = new AdminTable($layout->col1);        $reader = new MailServerReader();        (new AdminTableHeader($table))            ->addText($reader->model->active->label)            ->addText($reader->model->host->label)            ->addText($reader->model->port->label)            ->addText($reader->model->mailAddress->label)            ->addEmpty()            ->addEmpty();        foreach ($reader->getData() as $mailServerRow) {            $row = new AdminTableRow($table);            $row->addYesNo($mailServerRow->active);            $row->addText($mailServerRow->host);            $row->addText($mailServerRow->port);            $row->addText($mailServerRow->mailText . ' (' . $mailServerRow->mailAddress . ')');            $site = clone(ConfigSite::$site);            $site->addParameter(new MailServerParameter($mailServerRow->id));            $row->addSite($site);            $site = clone(MailServerDeleteSite::$site);            $site->addParameter(new MailServerParameter($mailServerRow->id));            $row->addIconSite($site);        }        $form = new MailServerForm($layout->col2);        $form->redirectSite = ConfigSite::$site;        $parameter = new MailServerParameter();        if ($parameter->hasValue()) {            $form->dataId = $parameter->getValue();        }        return parent::getContent();    }}