<?phpnamespace Nemundo\App\Mail\Message;use Nemundo\App\Mail\MailConfig;use Nemundo\Core\Log\LogMessage;use Symfony\Component\Mailer\Mailer;use Symfony\Component\Mailer\Transport;use Symfony\Component\Mime\Address;use Symfony\Component\Mime\Email;use Symfony\Component\Mime\Part\DataPart;use Symfony\Component\Mime\Part\File;class SmtpMailMessage extends AbstractSmtpMessage{    public function sendMail()    {        $dsn = 'smtp://' . MailConfig::$mailConnection->user . ':' . MailConfig::$mailConnection->password . '@' . MailConfig::$mailConnection->host . ':' . MailConfig::$mailConnection->port;        $transport = Transport::fromDsn($dsn);        $mailer = new Mailer($transport);        $email = new Email();        foreach ($this->toList as $to) {            $email->to($to);        }        foreach ($this->ccList as $cc) {            $email->addCc($cc);        }        foreach ($this->bccList as $bcc) {            $email->addBcc($bcc);        }        $email->from(new Address(MailConfig::$defaultMailFrom, MailConfig::$defaultMailFromText));        $email->subject($this->subject);        if ($this->htmlMail) {            $email->html($this->text);        } else {            $email->text($this->text);        }        foreach ($this->inlineImageList as $inlineImage) {            $contentType = 'image/' . (new \Nemundo\Core\File\File($inlineImage->filename))->getFileExtension();            $email->addPart((new DataPart(fopen($inlineImage->filename, 'r'), $inlineImage->cid, $contentType))->asInline());        }        foreach ($this->attachmentList as $filename) {            $email->addPart(new DataPart(new File($filename)));        }        try {            $mailer->send($email);        } catch (\Exception $error) {            (new LogMessage())->writeError($error);        }    }}