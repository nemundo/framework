<?phpnamespace Nemundo\App\Mail\Message\Smtp;use Nemundo\App\Mail\Connection\SmtpConnection;use Nemundo\Core\Debug\Debug;use Nemundo\Core\File\File;use Nemundo\Core\Log\LogMessage;use Symfony\Component\Mailer\Mailer;use Symfony\Component\Mailer\Transport;use Symfony\Component\Mime\Address;use Symfony\Component\Mime\Email;use Symfony\Component\Mime\Part\DataPart;class SmtpMailMessage extends AbstractSmtpMessage{    /**     * @var SmtpConnection     */    public $connection;    public function __construct()    {        parent::__construct();        $this->connection = new SmtpConnection();    }    public function sendMail()    {        $dsn = 'smtp://' . $this->connection->user . ':' . urlencode($this->connection->password) . '@' . $this->connection->host . ':' . $this->connection->port;        try {            $transport = Transport::fromDsn($dsn);            $mailer = new Mailer($transport);            $email = new Email();            foreach ($this->toList as $to) {                $email->to($to);            }            foreach ($this->ccList as $cc) {                $email->addCc($cc);            }            foreach ($this->bccList as $bcc) {                $email->addBcc($bcc);            }            $email->from(new Address($this->connection->mailFrom, $this->connection->mailFromText));            $email->subject($this->subject);            if ($this->htmlMail) {                $email->html($this->text);            } else {                $email->text($this->text);            }            foreach ($this->inlineImageList as $inlineImage) {                $contentType = 'image/' . (new File($inlineImage->filename))->getFileExtension();                if ((new File($inlineImage->filename))->fileExists()) {                    $email->addPart((new DataPart(fopen($inlineImage->filename, 'r'), $inlineImage->cid, $contentType))->asInline());                } else {                    (new Debug())->write('Inline image file does not exist: ' . $inlineImage->filename);                }            }            foreach ($this->attachmentList as $fileAttachment) {                $email->addPart(new DataPart(new \Symfony\Component\Mime\Part\File($fileAttachment->filename), $fileAttachment->customFilename));            }            $mailer->send($email);        } catch (\Exception $error) {            (new LogMessage())->writeError($error);        }    }}