<?phpnamespace Nemundo\Admin\Com\Form\Date;use Nemundo\Admin\Com\ListBox\AdminDatePicker;use Nemundo\Admin\Parameter\Date\DateFromParameter;use Nemundo\Admin\Parameter\Date\DateToParameter;use Nemundo\Core\Language\LanguageCode;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Html\Container\AbstractHtmlContainer;use Nemundo\Package\Bootstrap\FormElement\BootstrapDatePicker;use Nemundo\Package\Bootstrap\FormElement\BootstrapFormStyle;class AdminFromToDatePicker extends AbstractHtmlContainer{    //use BootstrapFormStyle;    /**     * @var AdminDatePicker     */    private $from;    /**     * @var AdminDatePicker     */    private $to;    /**     * @var bool     */    public $searchMode = false;    /**     * @var bool     */    public $validation = false;    protected function loadContainer()    {        parent::loadContainer();        $this->from = new AdminDatePicker($this);        $this->from->name=(new DateFromParameter())->getParameterName();        $this->from->label[LanguageCode::EN] = 'From';        $this->from->label[LanguageCode::DE] = 'Von';        $this->to =  new AdminDatePicker($this);        $this->to->name=(new DateToParameter())->getParameterName();        $this->to->label[LanguageCode::EN] = 'To';        $this->to->label[LanguageCode::DE] = 'Bis';    }    public function getContent()    {        //$this->loadStyle();        $this->from->searchMode = $this->searchMode;        $this->from->validation = $this->validation;        $this->to->searchMode = $this->searchMode;        $this->to->validation = $this->validation;        return parent::getContent();    }    public function setDateFrom(Date $date)    {        $this->from->value = $date->getShortDateLeadingZeroFormat();        return $this;    }    public function setDateTo(Date $date)    {        $this->to->value = $date->getShortDateLeadingZeroFormat();        return $this;    }    public function hasValueFrom()    {        return $this->from->hasValue();    }    public function hasValueTo()    {        return $this->to->hasValue();    }    public function getDateFrom()    {        return $this->from->getDateValue();    }    public function getDateTo()    {        return $this->to->getDateValue();    }}