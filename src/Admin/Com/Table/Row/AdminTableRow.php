<?phpnamespace Nemundo\Admin\Com\Table\Row;use Nemundo\Admin\ActionSite\AbstractIconActionSite;use Nemundo\Admin\Com\Hyperlink\AdminSiteHyperlink;use Nemundo\Admin\Com\Hyperlink\AdminSiteHyperlinkContainer;use Nemundo\Admin\Com\Icon\AdminIcon;use Nemundo\Admin\Site\AbstractAdminIconSite;use Nemundo\Com\Html\Hyperlink\SiteHyperlink;use Nemundo\Com\Html\Hyperlink\UrlHyperlink;use Nemundo\Html\Container\AbstractContainer;use Nemundo\Html\Formatting\Bold;use Nemundo\Html\Table\Td;use Nemundo\Html\Table\Tr;use Nemundo\Web\Site\AbstractSite;class AdminTableRow extends Tr{    public $strikeThrough = false;    public function addSite(AbstractSite $site)    {        $hyperlink = new SiteHyperlink($this);        $hyperlink->site = $site;        return $this;    }    public function addEditSite(AbstractSite $site)    {        $hyperlink = new AdminSiteHyperlinkContainer($this);        $hyperlink->title = 'Editieren';  // $site->title;        $hyperlink->site = $site;        $icon = new AdminIcon($hyperlink);        $icon->icon = 'edit';  // $site->iconName;    }    public function addIconSite(AbstractAdminIconSite $site)    {        $hyperlink = new AdminSiteHyperlinkContainer($this);        $hyperlink->title = $site->title;        $hyperlink->site = $site;        $icon = new AdminIcon($hyperlink);        $icon->icon = $site->iconName;    }    public function addActionSite(AbstractIconActionSite $site)    {        $hyperlink = new AdminSiteHyperlink($this);        $hyperlink->site = $site;        return $this;    }    public function addIconActionSite(AbstractIconActionSite $site, $deleteRequest = false)    {        $hyperlink = new AdminSiteHyperlinkContainer($this);        $hyperlink->title = $site->title;        $hyperlink->site = $site;        if ($deleteRequest) {            $hyperlink->addAttribute('onclick', 'return confirm(\'Datensatz lÃ¶schen?\')');        }        $icon = new AdminIcon($hyperlink);        $icon->icon = $site->iconName;    }    /* public function addClickableSite(AbstractSite $site) {         $hyperlink = new SiteHyperlink($this);         $hyperlink->title = 'Show';         $hyperlink->site = $site;     }*/    public function addClickableSite(AbstractSite $site = null)    {        if ($site !== null) {            $this->addClickableUrl($site->getUrl());        }    }    public function addClickableUrl($url)    {        $this->addCssClass('clickable-row');        $this->addAttribute('data-href', $url);    }    public function addText($text, $nowrap = false)    {        $td = new Td($this);        $td->content = $text;        $td->nowrap = $nowrap;        if ($this->strikeThrough) {            $td->addCssClass('admin-table-row-strike-through');        }        return $this;    }    public function addClickableText($text, AbstractSite $site)    {        $hyperlink = new AdminSiteHyperlink($this);        $hyperlink->site = $site;        $hyperlink->content = $text;        $hyperlink->showSiteTitle = false;        return $this;    }    public function addTextRight($text, $nowrap = false)    {        $td = new Td($this);        $td->content = $text;        $td->nowrap = $nowrap;        $td->addCssClass('admin-text-right');        return $this;    }    public function addBoldText($text)    {        $bold = new Bold($this);        $bold->content = $text;        return $this;    }    public function addBoldTextRight($text)    {        $td = new Td($this);        //$td->content = $text;        //$td->nowrap = $nowrap;        $td->addCssClass('admin-text-right');        $bold = new Bold($td);        $bold->content = $text;        return $this;    }    //$count = 1    public function addEmpty($count = 1)    {        for ($n = 0; $n < $count; $n++) {            $this->addText('&nbsp;');        }        return $this;    }    public function addHyperlink($url, $label = null, $openNewWindow = false)    {        if ($label == null) {            $label = $url;        }        $hyperlink = new UrlHyperlink($this);        $hyperlink->content = $label;        $hyperlink->url = $url;        $hyperlink->openNewWindow = $openNewWindow;        return $this;    }    public function addYesNo($value)    {        if ($value) {            $icon = new AdminIcon($this);            $icon->icon = 'check';            //new CheckIcon($this);        } else {            $this->addEmpty();        }        return $this;    }    public function addContainer(AbstractContainer $container)    {        if ($container->isObjectOfClass(Td::class)) {            parent::addContainer($container);        } else {            $td = new Td();            $td->addContainer($container);            parent::addContainer($td);        }    }    public function getContent()    {        if ($this->strikeThrough) {            $this->addCssClass('admin-table-row-strike-through');        }        return parent::getContent(); // TODO: Change the autogenerated stub    }}