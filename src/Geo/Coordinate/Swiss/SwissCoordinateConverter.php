<?phpnamespace Nemundo\Geo\Coordinate\Swiss;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Type\Geo\GeoCoordinate;//https://github.com/antistatique/swisstopo/** * Convert GPS (WGS84) to Swiss (LV03 or LV95) coordinates - and vice versa. */class SwissCoordinateConverter extends AbstractBase{    /**     * Convert the given Swiss (MN95) coordinate points into WGS notation.     *     * @param int $east     *   The East Swiss (MN95) coordinate point     * @param int $north     *   The North Swiss (MN95) coordinate point     *     * @return GeoCoordinate     *   The array containing WGS latitude & longitude coordinates     */    public function fromMN95ToWGS(int $east, int $north)    {        $coordinate = new GeoCoordinate();        $coordinate->latitude = $this->fromMN95ToWGSLatitude($east, $north);        $coordinate->longitude= $this->fromMN95ToWGSLongitude($east, $north);        return $coordinate;    }    /**     * Convert Swiss (MN95) coordinates East & North to WGS latitude value.     *     * @param int $east     *   The East Swiss (MN95) coordinate point     * @param int $north     *   The North Swiss (MN95) coordinate point     *     * @return float     *   The converted Swiss (MN95) coordinates to WGS latitude     */    private function fromMN95ToWGSLatitude(int $east, int $north): float    {        // Convert the projection coordinates E (easting) and N (northing) in MN95        // into the civilian system (Bern = 0 / 0) and express in the unit 1000 km.        $y_aux = ($east - 2600000) / 1000000;        $x_aux = ($north - 1200000) / 1000000;        // Process latitude calculation.        $lat = 16.9023892            + 3.238272 * $x_aux            - 0.270978 * pow($y_aux, 2)            - 0.002528 * pow($x_aux, 2)            - 0.0447 * pow($y_aux, 2) * $x_aux            - 0.0140 * pow($x_aux, 3);        // Unit 10000" to 1" and converts seconds to degrees notation.        $lat = $lat * 100 / 36;        return $lat;    }    /**     * Convert Swiss (MN95) coordinates East & North to WGS longitude value.     *     * @param int $east     *   The East Swiss (MN95) coordinate point     * @param int $north     *   The North Swiss (MN95) coordinate point     *     * @return float     *   The converted Swiss (MN95) coordinates to WGS longitude     */    private function fromMN95ToWGSLongitude(int $east, int $north): float    {        // Convert the projection coordinates E (easting) and N (northing) in MN95        // into the civilian system (Bern = 0 / 0) and express in the unit 1000 km.        $y_aux = ($east - 2600000) / 1000000;        $x_aux = ($north - 1200000) / 1000000;        // Process longitude calculation.        $long = 2.6779094            + 4.728982 * $y_aux            + 0.791484 * $y_aux * $x_aux            + 0.1306 * $y_aux * pow($x_aux, 2)            - 0.0436 * pow($y_aux, 3);        // Unit 10000" to 1" and converts seconds to degrees notation.        $long = $long * 100 / 36;        return $long;    }}