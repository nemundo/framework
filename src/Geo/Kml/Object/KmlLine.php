<?php

namespace Nemundo\Geo\Kml\Object;


use Nemundo\Core\Directory\TextDirectory;
use Nemundo\Core\Type\Geo\GeoCoordinateAltitude;
use Nemundo\Geo\Kml\Container\Placemark;
use Nemundo\Geo\Kml\Element\LineString;
use Nemundo\Geo\Kml\Property\Color;
use Nemundo\Geo\Kml\Property\Width;
use Nemundo\Geo\Kml\Style\LineStyle;
use Nemundo\Geo\Kml\Style\Style;


// LinePlacemark
class KmlLine extends Placemark  // AbstractKmlElement
{

    /**
     * @var string
     */
    //public $title;

    /**
     * @var int
     */
    public $width;

    /**
     * @var string
     */
    public $color;

    // http://www.zonums.com/gmaps/kml_color/

    /**
     * @var TextDirectory
     */
    private $coordinateDirectory;

    /**
     * @var string
     */
    private $coordinateText = '';


    /**
     * @var LineString
     */
    private $lineString;


    protected function loadContainer()
    {
        parent::loadContainer(); // TODO: Change the autogenerated stub

        $this->lineString = new LineString($this);  // LineString();

    }


    /*
    public function __construct(KmlDocument $kmlDocument = null)
    {

        parent::__construct($kmlDocument);
        $this->coordinateDirectory = new TextDirectory();

    }*/


    public function addPoint(GeoCoordinateAltitude $coordinate)
    {

        $this->lineString->addPoint($coordinate);

        /*
        $longitude = round($coordinate->longitude, 5);
        $latitude = round($coordinate->latitude, 5);
        $this->coordinateText .= $longitude . ',' . $latitude . ',' . $coordinate->altitude . PHP_EOL;
*/

        return $this;

    }


    public function getContent()
    {


        $style = new Style($this);

        $lineStyle = new LineStyle($style);

        if ($this->color !== null) {
            $color = new Color($lineStyle);
            $color->value = $this->color;
        }

        if ($this->width !== null) {
            $width = new Width($lineStyle);
            $width->value = $this->width;
        }


        /*$item = new XmlItem();
        $item->tagName = 'Placemark';


        if ($this->title !== null) {
            $name = new XmlItem($item);
            $name->tagName = 'name';
            $name->value = $this->title;
        }


        /*
        $style = new XmlItem($item);
        $style->tagName = 'Style';

        $lineStyle = new XmlItem($style);
        $lineStyle->tagName = 'LineStyle';

        if ($this->width !== null) {
            $style = new XmlItem($lineStyle);
            $style->tagName = 'width';
            $style->value = $this->width;
        }

        if ($this->color !== null) {
            $style = new XmlItem($lineStyle);
            $style->tagName = 'color';
            $style->value = $this->color;
        }*/


        /*
        $style = new XmlItem($item);
        $style->tagName = 'styleUrl';
        $style->value = '#linestyleExample';*/


        /*
        $lineString = new XmlItem($item);
        $lineString->tagName = 'LineString';

        $altitudeMode = new XmlItem($lineString);
        $altitudeMode->tagName = 'altitudeMode';
        $altitudeMode->value = 'absolute';
        //$altitudeMode->value = 'relativeToGround';
        //$altitudeMode->value = 'clampToGround';

        $coordinate = new XmlItem($lineString);
        $coordinate->tagName = 'coordinates';
        $coordinate->value = $this->coordinateText;*/


        //$this->addContainer($this->lineString);

        return parent::getContent();


    }

}